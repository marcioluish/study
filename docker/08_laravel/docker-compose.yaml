version: "3.8"

services:
  server:
    # image: "nginx:stable-alpine"
    container_name: laravel_server
    image: laravel_server
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - "8000:80"
    # volumes:
    #   - ./src:/var/www/html
    #   - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql

  # The PHP service name must mach that defined in the "nginx.conf" file
  php:
    container_name: laravel_php
    image: laravel_php
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
      ## Delegated is used to not reflectly instantly, on the host machine,
      # changes that may occur in the container.
    # volumes:
    #   - ./src:/var/www/html:delegated
    # - ./src:/var/www/html
    ## There is no need to port localhost to the container, since it'll be
    # the nginx server which will comunicate with the php container.
    ## To make php container accessible to the nginx server, nginx conf
    # file must be changed from 'php:3000' to 'php:9000'. To know why
    # port 9000 must be tagged, see php image documentation.
    # ports:
    #  - 3000:9000

  mysql:
    container_name: laravel_mysql
    image: mysql:5.7
    env_file:
      - ./env/mysql.env

  composer:
    container_name: laravel_composer
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html

  artisan:
    container_name: laravel_artisan
    image: laravel_artisan
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]

  npm:
    image: node:14
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html
